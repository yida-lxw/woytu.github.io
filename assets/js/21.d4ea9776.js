(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{608:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git安装与问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git安装与问题"}},[t._v("#")]),t._v(" Git安装与问题")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#flag"}},[t._v("Flag")])]),s("li",[s("a",{attrs:{href:"#安装最新版"}},[t._v("安装最新版")])]),s("li",[s("a",{attrs:{href:"#常见问题处理"}},[t._v("常见问题处理")]),s("ul",[s("li",[s("a",{attrs:{href:"#项目过大clone报错"}},[t._v("项目过大clone报错")])]),s("li",[s("a",{attrs:{href:"#提交本地文件失败"}},[t._v("提交本地文件失败")])]),s("li",[s("a",{attrs:{href:"#远端与本地代码冲突"}},[t._v("远端与本地代码冲突")])]),s("li",[s("a",{attrs:{href:"#ssl验证错误"}},[t._v("SSL验证错误")])]),s("li",[s("a",{attrs:{href:"#push错误"}},[t._v("push错误")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"flag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" Flag")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/topics/git",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/topics/git"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/git",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/git"),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/git-for-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/git-for-windows"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://git-scm.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://gitforwindows.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitforwindows.org"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.syntevo.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.syntevo.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/github/gitignore"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/toptal/gitignore.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/toptal/gitignore.io"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.catb.org/esr/reposurgeon",target:"_blank",rel:"noopener noreferrer"}},[t._v("reposurgeon是一种工具,用于编辑版本控制存储库的历史"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/gitextensions/gitextensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gitextensions/gitextensions"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"安装最新版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装最新版"}},[t._v("#")]),t._v(" 安装最新版")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://git-scm.com/download",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/download"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://npm.taobao.org/mirrors/git-for-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://npm.taobao.org/mirrors/git-for-windows"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://packages.endpoint.com/rhel/7/os/x86_64/git-2.24.1-1.ep7.x86_64.rpm",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://packages.endpoint.com/rhel/7/os/x86_64/git-2.24.1-1.ep7.x86_64.rpm"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[t._v("方式一")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -ivh wandisco-git-release-7-2.noarch.rpm\n")])])]),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/iusrepo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/iusrepo"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://setup.ius.io "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y epel-release  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -ivh https://centos7.iuscommunity.org/ius-release.rpm\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看git包版本")]),t._v("\nyum list git2u\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\nyum -y "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" git2u\n")])])]),s("h2",{attrs:{id:"常见问题处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题处理"}},[t._v("#")]),t._v(" 常见问题处理")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/qq_34665539/article/details/80408282",target:"_blank",rel:"noopener noreferrer"}},[t._v("git中fatal: Authentication failed的问题"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"项目过大clone报错"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目过大clone报错"}},[t._v("#")]),t._v(" 项目过大clone报错")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://vnzmi.com/2017/01/08/git-early-eof-index-pack-failed",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git index-pack failed 问题解决"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[t._v("由于提交了比较大的文件，在服务端一直无法拉下来，错误如下")])]),t._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[t._v("Cloning into 'E:\\soft'...\nPOST git-upload-pack (175 bytes)\nremote: Enumerating objects: 6, done.\nremote: Counting objects: 100% (6/6), done.\nremote: Compressing objects: 100% (6/6), done.\nfatal: early EOF\nfatal: the remote end hung up unexpectedly\nfatal: index-pack failed\n")])])]),s("ul",[s("li",[t._v("执行命令")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改压缩的程度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.compression "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决内存不够问题")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global pack.deltaCacheSize 2047m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global pack.packSizeLimit 2047m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global pack.windowMemory 2047m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.packedGitWindowSize 512m\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.packedGitLimit 512m\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 调整缓存大小（单位为字节）为1G")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.postBuffer "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1073741824")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最低速度限制")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.lowSpeedLimit "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最低速度时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.lowSpeedTime "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("compression 是压缩的意思，从 clone 的终端输出就知道，服务器会压缩目标文件，然后传输到客户端，客户端再解压。\n取值为 [-1, 9]，-1 以 zlib 为默认压缩库，0 表示不进行压缩，1..9 是压缩速度与最终获得文件大小的不同程度的权衡，\n数字越大，压缩越慢，当然得到的文件会越小。")])]),t._v(" "),s("h3",{attrs:{id:"提交本地文件失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交本地文件失败"}},[t._v("#")]),t._v(" 提交本地文件失败")]),t._v(" "),s("blockquote",[s("p",[t._v("在github远程创建仓库后, 利用gitbash进行提交本地文件的时候出现如下错误")])]),t._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[t._v("[root@foundation38 demo]# git push -u origin master\nUsername for 'https://github.com': woytu\nPassword for 'https://woytu@github.com': \nTo https://github.com/woytu/test.git\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[t._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[t._v("! [rejected]        master -> master (non-fast-forward)\n")])]),t._v("error: failed to push some refs to 'https://github.com/woytu/test.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Merge the remote changes (e.g. 'git pull')\nhint: before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n")])])]),s("ul",[s("li",[t._v("第一种：进行push前先将远程仓库pull到本地仓库")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git pull --rebase origin master")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n\n")])])]),s("ul",[s("li",[t._v("第二种：强制push本地仓库到远程")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master -f\n")])])]),s("ul",[s("li",[t._v("第三种：避开解决冲突, 将本地文件暂时提交到远程新建的分支中")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建完branch后, 再进行push")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("h3",{attrs:{id:"远端与本地代码冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远端与本地代码冲突"}},[t._v("#")]),t._v(" 远端与本地代码冲突")]),t._v(" "),s("ul",[s("li",[t._v("先将本地修改存储起来")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂存修改,这样本地的所有修改就都被暂时存储起来")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看到保存的信息,其中stash@{0}就是刚才保存的标记。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list\n")])])]),s("ul",[s("li",[s("p",[t._v("暂存了本地修改之后，pull内容")])]),t._v(" "),s("li",[s("p",[t._v("还原暂存的内容")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash popstash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("系统提示如下类似的信息")])]),t._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[t._v("Auto-mergingc/environ.c\nCONFLICT(content): Merge conflict in c/environ.c\n")])])]),s("blockquote",[s("p",[t._v("意思就是系统自动合并修改的内容，但是其中有冲突，需要解决其中的冲突。")])]),t._v(" "),s("ul",[s("li",[t._v("解决文件中冲突的的部分")])]),t._v(" "),s("blockquote",[s("p",[t._v("打开冲突的文件，其中"),s("code",[t._v("Updatedupstream")]),t._v(" 和"),s("code",[t._v("=====")]),t._v("之间的内容就是pull下来的内容，"),s("code",[t._v("====")]),t._v("和"),s("code",[t._v("stashed changes")]),t._v("之间的\n内容就是本地修改的内容。碰到这种情况，git也不知道哪行内容是需要的，所以要自行确定需要的内容。")])]),t._v(" "),s("h3",{attrs:{id:"ssl验证错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssl验证错误"}},[t._v("#")]),t._v(" SSL验证错误")]),t._v(" "),s("blockquote",[s("p",[t._v("报错 "),s("code",[t._v("unable to access 'https://github.com/': OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443")])])]),t._v(" "),s("ul",[s("li",[t._v("关闭SSL验证")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GIT_SSL_NO_VERIFY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.sslVerify "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("ul",[s("li",[t._v("去掉代理")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset http.proxy\n")])])]),s("h3",{attrs:{id:"push错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push错误"}},[t._v("#")]),t._v(" push错误")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("The following untracked working tree files would be overwritten by merge/checkout")])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git clean -d -fx")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("-n")]),t._v(" 显示将要删除的文件和目录；")]),t._v(" "),s("li",[s("code",[t._v("-x")]),t._v(" 删除忽略文件已经对git来说不识别的文件")]),t._v(" "),s("li",[s("code",[t._v("-d")]),t._v(" 删除未被添加到git的路径中的文件")]),t._v(" "),s("li",[s("code",[t._v("-f")]),t._v(" 强制运行")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("fatal: refusing to merge unrelated histories")])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git pull origin master --allow-unrelated-histories")]),t._v(" 可以允许不相关历史提，强制合并")])])])}),[],!1,null,null,null);e.default=n.exports}}]);